{"ast":null,"code":"var getState = function getState(scope) {\n  return {\n    store: {\n      gemini: [],\n      bitstamp: [],\n      coinbase: [],\n      mercadobitcoin: [],\n      negociecoins: [],\n      bitcambio: [],\n      braziliex: [],\n      session: {\n        username: 'Rigo',\n        password: \"password\",\n        loggedIn: false,\n        user: {\n          name: \"Joe Shmo\",\n          email: 'JoeShmoCodes2@gmail.com'\n        }\n      }\n    },\n    actions: {\n      findCountryData: function findCountryData(countryName) {\n        switch (countryName) {\n          case \"United States\":\n            var gemini = scope.state.store.gemini.length > 0 ? \"Gemini: $\" + scope.state.store.gemini[\"0\"].ask + \" \" : \"\";\n            var coinbase = scope.state.store.coinbase.length > 0 ? \"Coinbase: $\" + scope.state.store.coinbase[\"0\"].ask + \" \" : \"\";\n            return coinbase + gemini;\n\n          case \"Brazil\":\n            //Mercado Bitcoin Information\n            var mercadobitcoinlast = scope.state.store.mercadobitcoin.length > 0 ? \"Last sold for: $\" + scope.state.store.mercadobitcoin[\"0\"].ticker.last + \"\" : \" \"; //Negocie Coin Information\n\n            var negociecoinslast = scope.state.store.negociecoins.length > 0 ? \"R$\" + scope.state.store.negociecoins[\"0\"].last + \"\" : \" \"; //Bitcambio Information\n\n            var bitcambiolast = scope.state.store.bitcambio.length > 0 ? \"R$\" + scope.state.store.bitcambio[\"0\"].last + \"\" : \" \";\n            return mercadobitcoinbuy + '      ' + mercadobitcoinsell + ' ' + mercadobitcoinlast + ' ' + negociecoinslast + ' ' + bitcambiolast;\n          //case \"Germany\" || \"France\":\n\n          /*case \"Canada\":\n          case \"Mexico\":\n          case \"Guatemala\":\n          case \"El Salvador\":\n          case \"Belize\":\n          case \"Honduras\":\n          case \"Nicaragua\":\n          case \"Costa Rica\":\n          case \"Panama\":\n          case \"Colombia\":\n          case \"Ecuador\":\n          case \"Venezuela\":\n          case \"Guyana\":\n          case \"Suriname\":\n          case \"France\":\n          case \"Peru\":\n          case \"Bolivia\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":\n          case \"Brazil\":*/\n\n          default:\n            return \" \";\n        }\n        /*return scope.state.store.gemini.length > 0 ? scope.state.store.gemini[\"0\"].ask+\"\" : \" no data\";/*.map((item, index) => {\n          return item.ask;\n        })[0];*/\n\n      },\n      addProductToCart: function addProductToCart(product) {\n        var usercart = scope.state.store;\n        usercart.cart.push(product);\n        scope.setState({\n          usercart: usercart\n        });\n        alert(\"You just added \" + product.name + \" to the cart.\");\n      },\n      deleteItemInCart: function deleteItemInCart(product) {\n        var mistake = scope.state.store;\n        mistake.cart.splice(product, 1);\n        scope.setState(mistake);\n      },\n      isLegalUser: function isLegalUser(user) {\n        var store = scope.state.store;\n\n        if (user.username === store.session.username && user.password === store.session.password) {\n          store.session.loggedIn = true;\n          scope.setState({\n            store: store\n          });\n          return true;\n        }\n      },\n      logOut: function logOut() {\n        var store = scope.state.store;\n\n        if (store.session.loggedIn) {\n          store.session.loggedIn = false;\n          scope.setState({\n            store: store\n          });\n        }\n      },\n      changeColor: function changeColor(element, color) {\n        var store = scope.state.store;\n        store.demo[element].background = color;\n        scope.setState({\n          store: store\n        });\n      }\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["/home/ubuntu/workspace/src/js/store/store.js"],"names":["getState","scope","store","gemini","bitstamp","coinbase","mercadobitcoin","negociecoins","bitcambio","braziliex","session","username","password","loggedIn","user","name","email","actions","findCountryData","countryName","state","length","ask","mercadobitcoinlast","ticker","last","negociecoinslast","bitcambiolast","mercadobitcoinbuy","mercadobitcoinsell","addProductToCart","product","usercart","cart","push","setState","alert","deleteItemInCart","mistake","splice","isLegalUser","logOut","changeColor","element","color","demo","background"],"mappings":"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","sourcesContent":["const getState = (scope) => {\n    return {\n        store: {\n            gemini:[],\n            \n            bitstamp:[],\n            \n            coinbase:[],\n            \n            mercadobitcoin:[],\n            \n            negociecoins:[],\n            \n            bitcambio:[],\n            \n            braziliex:[],\n        \n            session:{\n                username:'Rigo',\n                password: \"password\",\n                loggedIn: false,\n                user:  {name: \"Joe Shmo\",\n                email: 'JoeShmoCodes2@gmail.com'\n                }\n            }\n            \n        },\n        actions: {\n            findCountryData: (countryName) => {\n                switch(countryName) {\n                    case \"United States\":\n                        let gemini = scope.state.store.gemini.length > 0 ? \"Gemini: $\"+scope.state.store.gemini[\"0\"].ask+\" \" : \"\";\n                        let coinbase = scope.state.store.coinbase.length > 0 ? \"Coinbase: $\"+scope.state.store.coinbase[\"0\"].ask+\" \" : \"\";\n                        return coinbase + gemini;\n                    case \"Brazil\":\n                        //Mercado Bitcoin Information\n                        let mercadobitcoinlast = scope.state.store.mercadobitcoin.length > 0 ? \"Last sold for: $\"+scope.state.store.mercadobitcoin[\"0\"].ticker.last+\"\" : \" \";\n                        //Negocie Coin Information\n                        let negociecoinslast = scope.state.store.negociecoins.length > 0 ? \"R$\"+scope.state.store.negociecoins[\"0\"].last+\"\" : \" \";\n                        //Bitcambio Information\n                        let bitcambiolast = scope.state.store.bitcambio.length > 0 ? \"R$\"+scope.state.store.bitcambio[\"0\"].last+\"\" : \" \";\n                        \n                        return mercadobitcoinbuy + '      ' + mercadobitcoinsell + ' ' + mercadobitcoinlast + ' ' + negociecoinslast + ' ' + bitcambiolast;\n                       \n                        //case \"Germany\" || \"France\":\n                        /*case \"Canada\":\n                        case \"Mexico\":\n                        case \"Guatemala\":\n                        case \"El Salvador\":\n                        case \"Belize\":\n                        case \"Honduras\":\n                        case \"Nicaragua\":\n                        case \"Costa Rica\":\n                        case \"Panama\":\n                        case \"Colombia\":\n                        case \"Ecuador\":\n                        case \"Venezuela\":\n                        case \"Guyana\":\n                        case \"Suriname\":\n                        case \"France\":\n                        case \"Peru\":\n                        case \"Bolivia\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":\n                        case \"Brazil\":*/\n                            \n                    default:\n                        return \" \";\n                }\n                \n                /*return scope.state.store.gemini.length > 0 ? scope.state.store.gemini[\"0\"].ask+\"\" : \" no data\";/*.map((item, index) => {\n                  return item.ask;\n                })[0];*/\n            },\n            \n            \n            addProductToCart: (product) => {\n                let usercart = scope.state.store;\n                usercart.cart.push(product);\n                scope.setState({usercart});\n                alert(\"You just added \" + product.name + \" to the cart.\");\n                \n            },\n            \n            deleteItemInCart: (product) => {\n                let mistake = scope.state.store;\n                mistake.cart.splice(product, 1);\n                scope.setState(mistake);\n            },\n            \n            isLegalUser: (user) => {\n                \n                let store = scope.state.store;\n                if (user.username === store.session.username && user.password === store.session.password){\n                    store.session.loggedIn = true;\n                    scope.setState({store});\n                    return true;\n                } \n            },\n            \n            logOut: () => {\n                \n                let store = scope.state.store;\n                \n                if (store.session.loggedIn) {\n                    store.session.loggedIn = false;\n                    scope.setState({store});\n                }\n            },            \n            \n            changeColor: (element, color) => {\n                let store = scope.state.store;\n                store.demo[element].background = color;\n                scope.setState({store});\n            }\n        }\n    };\n};\n\nexport default getState;\n\n"]},"metadata":{},"sourceType":"module"}