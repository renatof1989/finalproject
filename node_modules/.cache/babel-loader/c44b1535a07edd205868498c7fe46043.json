{"ast":null,"code":"var getState = function getState(scope) {\n  return {\n    store: {\n      /*gemini:[],\n      \n      bitstamp:[],\n      \n      coinbase:[],\n      \n      mercadobitcoin:[],\n      \n      negociecoins:[],\n      \n      bitcambio:[],\n      \n      braziliex:[],*/\n      session: {\n        username: 'Rigo',\n        password: \"password\",\n        loggedIn: false,\n        user: {\n          name: \"Renato Frores\",\n          email: 'rigocodes@gmail.com'\n        }\n      }\n    },\n    actions: {\n      addProductToCart: function addProductToCart(product) {\n        var usercart = scope.state.store;\n        usercart.cart.push(product);\n        scope.setState({\n          usercart: usercart\n        });\n        alert(\"You just added \" + product.name + \" to the cart.\");\n      },\n      deleteItemInCart: function deleteItemInCart(product) {\n        var mistake = scope.state.store;\n        mistake.cart.splice(product, 1);\n        scope.setState(mistake);\n      },\n      isLegalUser: function isLegalUser(user) {\n        var store = scope.state.store;\n\n        if (user.username === store.session.username && user.password === store.session.password) {\n          store.session.loggedIn = true;\n          scope.setState({\n            store: store\n          });\n          return true;\n        }\n      },\n      logOut: function logOut() {\n        var store = scope.state.store;\n\n        if (store.session.loggedIn) {\n          store.session.loggedIn = false;\n          scope.setState({\n            store: store\n          });\n        }\n      },\n      changeColor: function changeColor(element, color) {\n        var store = scope.state.store;\n        store.demo[element].background = color;\n        scope.setState({\n          store: store\n        });\n      }\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["/home/ubuntu/workspace/finalproject/src/js/store/store.js"],"names":["getState","scope","store","session","username","password","loggedIn","user","name","email","actions","addProductToCart","product","usercart","state","cart","push","setState","alert","deleteItemInCart","mistake","splice","isLegalUser","logOut","changeColor","element","color","demo","background"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,SAAO;AACHC,IAAAA,KAAK,EAAE;AACH;;;;;;;;;;;;;AAcAC,MAAAA,OAAO,EAAC;AACJC,QAAAA,QAAQ,EAAC,MADL;AAEJC,QAAAA,QAAQ,EAAE,UAFN;AAGJC,QAAAA,QAAQ,EAAE,KAHN;AAIJC,QAAAA,IAAI,EAAG;AAACC,UAAAA,IAAI,EAAE,eAAP;AACPC,UAAAA,KAAK,EAAE;AADA;AAJH;AAfL,KADJ;AA0BHC,IAAAA,OAAO,EAAE;AACLC,MAAAA,gBAAgB,EAAE,0BAACC,OAAD,EAAa;AAC3B,YAAIC,QAAQ,GAAGZ,KAAK,CAACa,KAAN,CAAYZ,KAA3B;AACAW,QAAAA,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBJ,OAAnB;AACAX,QAAAA,KAAK,CAACgB,QAAN,CAAe;AAACJ,UAAAA,QAAQ,EAARA;AAAD,SAAf;AACAK,QAAAA,KAAK,CAAC,oBAAoBN,OAAO,CAACJ,IAA5B,GAAmC,eAApC,CAAL;AAEH,OAPI;AASLW,MAAAA,gBAAgB,EAAE,0BAACP,OAAD,EAAa;AAC3B,YAAIQ,OAAO,GAAGnB,KAAK,CAACa,KAAN,CAAYZ,KAA1B;AACAkB,QAAAA,OAAO,CAACL,IAAR,CAAaM,MAAb,CAAoBT,OAApB,EAA6B,CAA7B;AACAX,QAAAA,KAAK,CAACgB,QAAN,CAAeG,OAAf;AACH,OAbI;AAeLE,MAAAA,WAAW,EAAE,qBAACf,IAAD,EAAU;AAEnB,YAAIL,KAAK,GAAGD,KAAK,CAACa,KAAN,CAAYZ,KAAxB;;AACA,YAAIK,IAAI,CAACH,QAAL,KAAkBF,KAAK,CAACC,OAAN,CAAcC,QAAhC,IAA4CG,IAAI,CAACF,QAAL,KAAkBH,KAAK,CAACC,OAAN,CAAcE,QAAhF,EAAyF;AACrFH,UAAAA,KAAK,CAACC,OAAN,CAAcG,QAAd,GAAyB,IAAzB;AACAL,UAAAA,KAAK,CAACgB,QAAN,CAAe;AAACf,YAAAA,KAAK,EAALA;AAAD,WAAf;AACA,iBAAO,IAAP;AACH;AACJ,OAvBI;AAyBLqB,MAAAA,MAAM,EAAE,kBAAM;AAEV,YAAIrB,KAAK,GAAGD,KAAK,CAACa,KAAN,CAAYZ,KAAxB;;AAEA,YAAIA,KAAK,CAACC,OAAN,CAAcG,QAAlB,EAA4B;AACxBJ,UAAAA,KAAK,CAACC,OAAN,CAAcG,QAAd,GAAyB,KAAzB;AACAL,UAAAA,KAAK,CAACgB,QAAN,CAAe;AAACf,YAAAA,KAAK,EAALA;AAAD,WAAf;AACH;AACJ,OAjCI;AAmCLsB,MAAAA,WAAW,EAAE,qBAACC,OAAD,EAAUC,KAAV,EAAoB;AAC7B,YAAIxB,KAAK,GAAGD,KAAK,CAACa,KAAN,CAAYZ,KAAxB;AACAA,QAAAA,KAAK,CAACyB,IAAN,CAAWF,OAAX,EAAoBG,UAApB,GAAiCF,KAAjC;AACAzB,QAAAA,KAAK,CAACgB,QAAN,CAAe;AAACf,UAAAA,KAAK,EAALA;AAAD,SAAf;AACH;AAvCI;AA1BN,GAAP;AAoEH,CArED;;AAuEA,eAAeF,QAAf","sourcesContent":["const getState = (scope) => {\n    return {\n        store: {\n            /*gemini:[],\n            \n            bitstamp:[],\n            \n            coinbase:[],\n            \n            mercadobitcoin:[],\n            \n            negociecoins:[],\n            \n            bitcambio:[],\n            \n            braziliex:[],*/\n        \n            session:{\n                username:'Rigo',\n                password: \"password\",\n                loggedIn: false,\n                user:  {name: \"Renato Frores\",\n                email: 'rigocodes@gmail.com'\n                }\n            }\n            \n        },\n        actions: {\n            addProductToCart: (product) => {\n                let usercart = scope.state.store;\n                usercart.cart.push(product);\n                scope.setState({usercart});\n                alert(\"You just added \" + product.name + \" to the cart.\");\n                \n            },\n            \n            deleteItemInCart: (product) => {\n                let mistake = scope.state.store;\n                mistake.cart.splice(product, 1);\n                scope.setState(mistake);\n            },\n            \n            isLegalUser: (user) => {\n                \n                let store = scope.state.store;\n                if (user.username === store.session.username && user.password === store.session.password){\n                    store.session.loggedIn = true;\n                    scope.setState({store});\n                    return true;\n                } \n            },\n            \n            logOut: () => {\n                \n                let store = scope.state.store;\n                \n                if (store.session.loggedIn) {\n                    store.session.loggedIn = false;\n                    scope.setState({store});\n                }\n            },            \n            \n            changeColor: (element, color) => {\n                let store = scope.state.store;\n                store.demo[element].background = color;\n                scope.setState({store});\n            }\n        }\n    };\n};\n\nexport default getState;\n\n"]},"metadata":{},"sourceType":"module"}