{"ast":null,"code":"import _classCallCheck from \"/home/ubuntu/workspace/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ubuntu/workspace/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ubuntu/workspace/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ubuntu/workspace/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ubuntu/workspace/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ubuntu/workspace/src/js/views/navbar.jsx\";\nimport React, { Component } from \"react\";\nimport { Context } from '../store/appContext.jsx';\nimport { Link } from 'react-router-dom';\n\nvar NavBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NavBar, _Component);\n\n  function NavBar() {\n    _classCallCheck(this, NavBar);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NavBar).apply(this, arguments));\n  }\n\n  _createClass(NavBar, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarSupportedContent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Home\"))), React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/cryptomap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Crypto Map\"))), React.createElement(Context.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, function (_ref) {\n        var store = _ref.store,\n            actions = _ref.actions;\n\n        if (store.session.loggedIn) {\n          return React.createElement(\"ul\", {\n            className: \"navbar-nav\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"nav-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/account\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, \"My Account\"))));\n        }\n      }), React.createElement(Context.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, function (_ref2) {\n        var store = _ref2.store;\n\n        if (!store.session.loggedIn) {\n          return React.createElement(\"ul\", {\n            className: \"navbar-nav mr-auto\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"nav-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, \"Login\"))), React.createElement(\"li\", {\n            className: \"nav-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/sign_up\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-info\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, \"Sign Up\"))));\n        }\n      })), React.createElement(\"form\", {\n        className: \"form-inline my-2 my-lg-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        class: \" btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Bitcoinage Check!\"), React.createElement(Context.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, function (_ref3) {\n        var store = _ref3.store,\n            actions = _ref3.actions;\n\n        if (store.session.loggedIn) {\n          return React.createElement(\"ul\", {\n            className: \"navbar-nav\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            className: \"nav-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/userInfo\",\n            className: \"nav-link\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Hello \", store.session.username, \"!\")), React.createElement(\"li\", {\n            className: \"nav-item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick() {\n              return actions.logOut();\n            },\n            className: \"btn btn-danger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, \"Log Out\"))));\n        }\n      }))))));\n    }\n  }]);\n\n  return NavBar;\n}(Component);\n\nexport default NavBar;","map":{"version":3,"sources":["/home/ubuntu/workspace/src/js/views/navbar.jsx"],"names":["React","Component","Context","Link","NavBar","store","actions","session","loggedIn","username","logOut"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Context} from '../store/appContext.jsx';\nimport { Link } from 'react-router-dom';\n\nclass NavBar extends Component{\n    render(){\n        return(\n            <React.Fragment>\n                <div>\n                \n                \n                    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" >\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item active\">\n                                    <Link to=\"/\">\n                                        <button type=\"button\" className=\"btn btn-dark\">Home</button>\n                                    </Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to=\"/cryptomap\">\n                                        <button type=\"button\" className=\"btn btn-dark\">Crypto Map</button>\n                                    </Link>                             \n                                </li>\n\n                                \n                                <Context.Consumer>\n                                    {\n                                        ({store, actions}) => {\n                                               if (store.session.loggedIn){\n                                                return (\n                                                    <ul className=\"navbar-nav\">\n                                                        <li className=\"nav-item\">\n                                                            <Link to=\"/account\">\n                                                                <button type=\"button\" className=\"btn btn-dark\">My Account</button>\n                                                            </Link>                             \n                                                        </li>\n                                                            \n                                                    </ul>\n                                                    );\n                                            }\n                                        }\n                                    }\n                                </Context.Consumer>                                \n                                \n                                <Context.Consumer>\n                                    {\n                                        ({store}) => {\n                                               if (!store.session.loggedIn){\n                                                return (\n                                                    <ul className=\"navbar-nav mr-auto\">\n                                                        <li className=\"nav-item\">\n                                                            <Link to=\"/login\">\n                                                                <button type=\"button\" className=\"btn btn-success\">Login</button>\n                                                            </Link>                            \n                                                        </li>\n                                                        <li className=\"nav-item\">\n                                                            <Link to=\"/sign_up\">\n                                                                <button type=\"button\" className=\"btn btn-info\">Sign Up</button>\n                                                            </Link>                            \n                                                        </li>\n                                                    </ul>\n                                                    );\n                                            }\n                                        }\n                                    }\n                                </Context.Consumer>\n                                \n                                \n                                \n                            </ul>\n\n                            <form className=\"form-inline my-2 my-lg-0\">\n                                <h6 class=\" btn-primary\">Bitcoinage Check!</h6>\n                                <Context.Consumer>\n                                    {\n                                        ({store, actions}) => {\n                                               if (store.session.loggedIn){\n                                                return (\n                                                    <ul className=\"navbar-nav\">\n                                                        <li className=\"nav-item\">\n                                                            <Link to=\"/userInfo\" className=\"nav-link\">\n                                                        Hello {store.session.username}!</Link></li>\n                                                        <li className=\"nav-item\">\n                                                            <Link to=\"/login\">\n                                                                <button type=\"button\" onClick = {() => actions.logOut()} className=\"btn btn-danger\">Log Out</button>\n                                                            </Link>                            \n                                                        </li>\n                                                            \n                                                    </ul>\n                                                    );\n                                            }\n                                        }\n                                    }\n                                </Context.Consumer>\n                            </form>\n                        </div>\n                    </nav>\n                    \n                    \n                    \n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NavBar;\n"]},"metadata":{},"sourceType":"module"}